# YOLOv5 🚀 by Ultralytics, AGPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [4,5, 8,10, 22,18]   #  P2/4
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
# 第一个参数 from ：从哪一层获得输入，-1表示从上一层获得，[-1, 6]表示从上层和第6层两层获得。
# 第二个参数 number：表示有几个相同的模块，如果为9则表示有9个相同的模块。
# 第三个参数 module：模块的名称，这些模块写在common.py中。
# 第四个参数 args：类的初始化参数，用于解析作为 moudle 的传入参数，即[ch_out（输出通道）, kernel（卷积核尺寸）, stride（步长）, padding（池化）, groups][输出通道数量，卷积核尺寸，步长，padding]，这里连ch_in都省去了，因为输入都是上层的输出（初始ch_in为3）
#假设输入图片的尺寸为 [3(输入通道),640（输入高）,640（输入宽）]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

# YOLOv5 v6.0 head
head:
# neck
  [[-1, 1, Conv, [512, 1, 1]], # 10 卷积层 通道变为512，尺寸不变,则[512，20，20]   
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 11  上采样，通道数不变，尺寸翻倍,则[512，40，40] 
   [[-1, 6], 1, Concat, [1]],   # 12 Concat 特征融合，将上一层与第六层连接起来。通道翻倍，尺寸不变[1024，40，40]
   [-1, 3, C3, [512, False]],  # 13 C3，不进行short cut  只改变通道数 [512，40，40]     

   [-1, 1, Conv, [256, 1, 1]], #14  卷积层 通道变为256，尺寸不变,则[256，40，40]
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  #15  上采样，通道数不变，尺寸翻倍,则[256，80，80]
   [[-1, 4], 1, Concat, [1]],  # #16 Concat 特征融合，将上一层与第4层连接起来。通道翻倍，尺寸不变[512，80，80]

   #自己加的 Neck 
   [-1, 3, C3, [256, False]], #17  C3    不进行short cut  只改变通道数 [256，80，80]            
   [-1, 1, Conv, [128, 1, 1]], #18  卷积层 通道变为128，尺寸不变,则[128，80，80                  
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],   #19 上采样，通道数不变，尺寸翻倍,则[256，160，160]
   [[-1, 2], 1, Concat, [1]],  #20 Concat 特征融合，将上一层与第2层连接起来。通道翻倍，尺寸不变[512，160，160]
# head
  # 自己加的head
   [-1, 3, C3, [128, False]],  #21 （p2/4-tiny）  C3    不进行short cut  只改变通道数 [128，160，160]
   [-1, 1, Conv, [128, 3, 2]], #22  卷积层 通道变为128，尺寸减半,则[128，80，80]     、
   [[-1, 18], 1, Concat, [1]], #23  Concat 特征融合，将上一层与第18层连接起来。通道翻倍，尺寸不变[256，80，80]
   [-1, 3, C3, [256, False]],  #24   (P3/8-small) C3    不进行short cut  只改变通道数 [256，160，160]

   [-1, 1, Conv, [256, 3, 2]], #25  卷积层 通道变为256，尺寸减半,则[256，40，40] 
   [[-1, 14], 1, Concat, [1]],  #26 Concat 特征融合，将上一层与第14层连接起来。通道翻倍，尺寸不变[512，160，160]
   [-1, 3, C3, [512, False]],  # 27 (P4/16-medium) C3 不进行short cut  只改变通道数 [512，40，40]

   [-1, 1, Conv, [512, 3, 2]], # 28  卷积层 通道变为512，尺寸减半,则[512，20，20] 
   [[-1, 10], 1, Concat, [1]],  # 29 cat head P5 特征融合，将上一层与第10层连接起来。通道翻倍，尺寸不变[1024，20，20] 
   [-1, 3, C3, [1024, False]],  # 30 (P5/32-large) C3 不进行short cut  只改变通道数 [1024，20，20]

   [[21, 24, 27,30], 1, Detect, [nc, anchors]],  # Detect(P2, P3, P4, P5)
  ]


